[2023-04-13T08:32:11.697328+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T09:19:33.096114+00:00] php.DEBUG: Warning: filemtime(): stat failed for /Users/mac/Desktop/cours symfony/notebook/config/routes/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/config/Resource/FileResource.php","line":58,"trace":[{"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-04-13T09:19:33.778748+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T09:19:33.780385+00:00] php.DEBUG: Warning: filemtime(): stat failed for /Users/mac/Desktop/cours symfony/notebook/config/routes/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/config/Resource/FileResource.php","line":58,"trace":[{"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-04-13T09:19:33.817900+00:00] php.DEBUG: Warning: mkdir(): File exists {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/cache/Traits/FilesystemCommonTrait.php","line":120,"trace":[{"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/cache/Adapter/PhpFilesAdapter.php","line":243,"function":"getFile","class":"Symfony\\Component\\Cache\\Adapter\\PhpFilesAdapter","type":"->"}],"count":1}}} []
[2023-04-13T09:19:33.852306+00:00] php.DEBUG: Warning: mkdir(): File exists {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/cache/Traits/FilesystemCommonTrait.php","line":42,"trace":[{"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/cache/Adapter/FilesystemAdapter.php","line":27,"function":"init","class":"Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter","type":"->"}],"count":1}}} []
[2023-04-13T09:19:34.033692+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 127 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:127)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-04-13T09:19:34.034228+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php line 127 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/http-kernel/EventListener/RouterListener.php:127)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-04-13T09:19:34.315149+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5f846f"},"request_uri":"http://127.0.0.1:8000/_wdt/5f846f","method":"GET"} []
[2023-04-13T09:30:12.663976+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"8","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T09:30:12.671149+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE `notebook` {"sql":"CREATE DATABASE `notebook`"} []
[2023-04-13T09:30:12.673198+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T09:32:33.825836+00:00] php.DEBUG: Warning: file(/proc/mounts): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/framework-bundle/Command/CacheClearCommand.php","line":203,"trace":[{"file":"/Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/framework-bundle/Command/CacheClearCommand.php","line":156,"function":"isNfs","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"}],"count":1}}} []
[2023-04-13T09:38:23.510517+00:00] console.CRITICAL: Error thrown while running command "mailer:test". Message: "Not enough arguments (missing: "to")." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Not enough arguments (missing: \"to\"). at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/console/Input/Input.php:70)","command":"mailer:test","message":"Not enough arguments (missing: \"to\")."} []
[2023-04-13T09:38:23.512370+00:00] console.DEBUG: Command "mailer:test" exited with code "1" {"command":"mailer:test","code":1} []
[2023-04-13T09:39:24.112542+00:00] mailer.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" starting [] []
[2023-04-13T09:39:25.473543+00:00] mailer.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" started [] []
[2023-04-13T09:39:26.029106+00:00] mailer.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopping [] []
[2023-04-13T09:39:26.136404+00:00] mailer.DEBUG: Email transport "Symfony\Component\Mailer\Transport\Smtp\SmtpTransport" stopped [] []
[2023-04-13T09:50:46.062350+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T10:01:47.057094+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T10:05:46.484740+00:00] console.DEBUG: Command "make:fixtures" exited with code "1" {"command":"make:fixtures","code":1} []
[2023-04-13T10:35:53.172364+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T10:35:53.185189+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:35:53.190870+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:35:53.193903+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:35:53.194243+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:35:53.199840+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:35:53.200333+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook"},"types":{"1":2,"2":2}} []
[2023-04-13T10:35:53.202194+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:35:53.202740+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:35:53.203272+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:35:53.206613+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:35:53.252563+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:35:53.288531+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T10:36:14.882989+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T10:36:14.887749+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:36:17.853939+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:36:17.855717+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T10:36:17.885795+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2023-04-13T10:36:17.914215+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T10:36:17.915513+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T10:36:17.915957+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T10:36:17.929656+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T10:36:17.935957+00:00] doctrine.DEBUG: Executing query: CREATE TABLE category (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, color VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE category (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, color VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-04-13T10:36:17.952499+00:00] doctrine.DEBUG: Executing query: CREATE TABLE note (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, creat_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', author VARCHAR(50) NOT NULL, content VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE note (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, creat_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', updated DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', author VARCHAR(50) NOT NULL, content VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-04-13T10:36:17.969726+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL, available_at DATETIME NOT NULL, delivered_at DATETIME DEFAULT NULL, INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL, available_at DATETIME NOT NULL, delivered_at DATETIME DEFAULT NULL, INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-04-13T10:36:17.991319+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230413103553","2":"2023-04-13 10:36:17","3":60}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230413103553","2":"2023-04-13 10:36:17","3":60},"types":{"1":2,"2":2,"3":1}} []
[2023-04-13T10:36:18.007532+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T10:36:24.534407+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T10:36:24.539659+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:51:10.019550+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T10:51:10.095919+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T10:51:10.097925+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T10:51:10.098638+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2023-04-13T10:51:10.106034+00:00] console.CRITICAL: Error thrown while running command "--env=dev doctrine:fixtures:load". Message: "Class "App\DataFixtures\Category" not found" {"exception":"[object] (Error(code: 0): Class \"App\\DataFixtures\\Category\" not found at /Users/mac/Desktop/cours symfony/notebook-symfony/src/DataFixtures/AppFixtures.php:30)","command":"--env=dev doctrine:fixtures:load","message":"Class \"App\\DataFixtures\\Category\" not found"} []
[2023-04-13T10:51:10.107969+00:00] console.DEBUG: Command "--env=dev doctrine:fixtures:load" exited with code "1" {"command":"--env=dev doctrine:fixtures:load","code":1} []
[2023-04-13T10:51:10.108719+00:00] php.CRITICAL: Uncaught Error: Class "App\DataFixtures\Category" not found {"exception":"[object] (Error(code: 0): Class \"App\\DataFixtures\\Category\" not found at /Users/mac/Desktop/cours symfony/notebook-symfony/src/DataFixtures/AppFixtures.php:30)"} []
[2023-04-13T10:51:10.512510+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T10:53:17.806354+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T10:53:17.816248+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:53:21.217790+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T10:53:21.253623+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T10:53:21.254151+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T10:53:21.256771+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2023-04-13T10:53:21.259812+00:00] console.CRITICAL: Error thrown while running command "--env=dev doctrine:fixtures:load". Message: "Call to undefined method App\Entity\Category::seTitle()" {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Category::seTitle() at /Users/mac/Desktop/cours symfony/notebook-symfony/src/DataFixtures/AppFixtures.php:32)","command":"--env=dev doctrine:fixtures:load","message":"Call to undefined method App\\Entity\\Category::seTitle()"} []
[2023-04-13T10:53:21.260312+00:00] console.DEBUG: Command "--env=dev doctrine:fixtures:load" exited with code "1" {"command":"--env=dev doctrine:fixtures:load","code":1} []
[2023-04-13T10:53:21.260633+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Category::seTitle() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Category::seTitle() at /Users/mac/Desktop/cours symfony/notebook-symfony/src/DataFixtures/AppFixtures.php:32)"} []
[2023-04-13T10:53:21.271225+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T10:59:03.115813+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T10:59:03.120969+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T10:59:05.125549+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T10:59:05.161046+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T10:59:05.162235+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T11:13:18.004481+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T11:13:18.010614+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T11:13:20.978612+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T11:13:21.015569+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T11:13:21.016164+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T11:22:16.415924+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T11:22:16.423069+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T11:22:19.014765+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T11:22:19.076540+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T11:22:19.078220+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T12:27:39.338510+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T12:27:39.350486+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:27:42.610146+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T12:27:42.673894+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T12:27:42.674708+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T12:32:45.808331+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T12:32:45.814900+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:32:49.157713+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T12:32:49.199252+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T12:32:49.200039+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T12:33:00.383116+00:00] php.CRITICAL: Fatal Error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 167772160 bytes) {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\OutOfMemoryError(code: 0): Error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 167772160 bytes) at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/doctrine/orm/lib/Doctrine/ORM/UnitOfWork.php:1023)"} []
[2023-04-13T12:36:34.227838+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T12:36:34.238380+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:36:36.733639+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T12:36:36.806396+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T12:36:36.807204+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T12:36:39.448595+00:00] php.CRITICAL: Fatal Error: Allowed memory size of 176160768 bytes exhausted (tried to allocate 41943040 bytes) {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\OutOfMemoryError(code: 0): Error: Allowed memory size of 176160768 bytes exhausted (tried to allocate 41943040 bytes) at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/doctrine/orm/lib/Doctrine/ORM/UnitOfWork.php:1023)"} []
[2023-04-13T12:42:25.628376+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T12:42:25.637654+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:42:27.539396+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T12:42:27.585017+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T12:42:27.585631+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T12:42:30.404102+00:00] php.CRITICAL: Fatal Error: Allowed memory size of 176160768 bytes exhausted (tried to allocate 41943040 bytes) {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\OutOfMemoryError(code: 0): Error: Allowed memory size of 176160768 bytes exhausted (tried to allocate 41943040 bytes) at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/doctrine/orm/lib/Doctrine/ORM/UnitOfWork.php:1023)"} []
[2023-04-13T12:43:06.590258+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T12:43:06.597207+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.600929+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.604093+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.604459+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.618245+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.618604+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.619522+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.619807+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.621293+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T12:43:06.624603+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.625168+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.630834+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T12:43:06.634254+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.634699+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.635272+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.635544+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.636098+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.636325+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.637207+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.637494+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.638142+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T12:43:06.639085+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.639348+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.639931+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T12:43:06.643294+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.643657+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook"},"types":{"1":2,"2":2}} []
[2023-04-13T12:43:06.645352+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.646272+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.647143+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T12:43:06.649781+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.665279+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T12:43:06.690842+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T13:01:29.997589+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:01:30.005001+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:01:32.506550+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T13:01:32.541388+00:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2023-04-13T13:01:32.541843+00:00] doctrine.DEBUG: Executing statement: DELETE FROM note {"sql":"DELETE FROM note"} []
[2023-04-13T13:01:43.819509+00:00] php.CRITICAL: Fatal Error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 167772160 bytes) {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\OutOfMemoryError(code: 0): Error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 167772160 bytes) at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/doctrine/orm/lib/Doctrine/ORM/UnitOfWork.php:1023)"} []
[2023-04-13T13:10:33.023046+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:10:33.032183+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.035307+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.036119+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.036539+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.050366+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.050764+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.051764+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.052066+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.052960+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:10:33.057285+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.057837+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.062569+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:10:33.065894+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.066457+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.067317+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.067652+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.068361+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.068629+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.069568+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.070084+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.071101+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:10:33.072562+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.072852+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.073521+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:10:33.076184+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.076477+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook"},"types":{"1":2,"2":2}} []
[2023-04-13T13:10:33.077580+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.078054+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.078700+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:10:33.081168+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.098793+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:10:33.117270+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T13:10:58.909517+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:10:58.914825+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:00.643619+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:00.646270+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:00.669787+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:00.670882+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:00.672731+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:00.673198+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:00.674265+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:11:00.677978+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:00.678416+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:00.689821+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:11:00.691129+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:11:00.691667+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:11:00.704830+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T13:11:00.711420+00:00] doctrine.DEBUG: Executing query: ALTER TABLE note ADD created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', ADD updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', DROP creat_at, DROP updated {"sql":"ALTER TABLE note ADD created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', ADD updated_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', DROP creat_at, DROP updated"} []
[2023-04-13T13:11:00.745054+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230413131033","2":"2023-04-13 13:11:00","3":39}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230413131033","2":"2023-04-13 13:11:00","3":39},"types":{"1":2,"2":2,"3":1}} []
[2023-04-13T13:11:00.762728+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T13:11:37.847277+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:11:37.854080+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.857704+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.858564+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.858901+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.871428+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.871846+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.872988+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.873494+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.874230+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:11:37.876312+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.876651+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.880039+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:11:37.883151+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.883497+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.883992+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.884260+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.884734+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.884979+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.886293+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.886886+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.887810+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:11:37.889210+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.889599+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.890646+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:11:37.893197+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.893742+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook"},"types":{"1":2,"2":2}} []
[2023-04-13T13:11:37.895110+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.895802+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.896422+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:11:37.898993+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.916111+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:11:37.944158+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T13:13:54.968362+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T13:14:04.177279+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T13:16:12.436177+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T13:18:34.223325+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/mac/Desktop/cours symfony/notebook-symfony/vendor/symfony/error-handler/DebugClassLoader.php:337)"} []
[2023-04-13T13:18:34.249097+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:18:34.254096+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.258949+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.260469+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.263278+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.284403+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.284793+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.285768+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.286051+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.286739+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:18:34.289693+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.290211+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.298529+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:18:34.305832+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.306304+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.307429+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.308276+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.309136+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.309519+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.310816+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.311442+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.312569+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:18:34.314072+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.314472+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.315332+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:18:34.319134+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.319463+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:34.320533+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.320985+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.321595+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:34.324086+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.343931+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:34.362712+00:00] doctrine.INFO: Disconnecting [] []
[2023-04-13T13:18:44.120329+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"} {"params":{"url":"<redacted>","driver":"pdo_mysql","host":"127.0.0.1","port":8889,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notebook","serverVersion":"8","charset":"utf8mb4"}} []
[2023-04-13T13:18:44.125185+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:46.810712+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:46.814246+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"notebook"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\nFROM information_schema.TABLES\nWHERE TABLE_SCHEMA = ?\n  AND TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_NAME","params":{"1":"notebook"},"types":{"1":2}} []
[2023-04-13T13:18:46.833596+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:46.834064+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\n           t.ENGINE,\n           t.AUTO_INCREMENT,\n           t.TABLE_COMMENT,\n           t.CREATE_OPTIONS,\n           t.TABLE_COLLATION,\n           ccsa.CHARACTER_SET_NAME\n      FROM information_schema.TABLES t\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:46.835027+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:46.835328+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\n            k.COLUMN_NAME,\n            k.REFERENCED_TABLE_NAME,\n            k.REFERENCED_COLUMN_NAME,\n            k.ORDINAL_POSITION /*!50116,\n            c.UPDATE_RULE,\n            c.DELETE_RULE */\nFROM information_schema.key_column_usage k /*!50116\nINNER JOIN information_schema.referential_constraints c\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'notebook' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:46.836399+00:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE        AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\n       c.COLUMN_TYPE        AS type,\n       c.IS_NULLABLE        AS `null`,\n       c.COLUMN_KEY         AS `key`,\n       c.COLUMN_DEFAULT     AS `default`,\n       c.EXTRA,\n       c.COLUMN_COMMENT     AS comment,\n       c.CHARACTER_SET_NAME AS characterset,\n       c.COLLATION_NAME     AS collation\nFROM information_schema.COLUMNS c\n    INNER JOIN information_schema.TABLES t\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"notebook","2":"notebook","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2023-04-13T13:18:46.840145+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2023-04-13T13:18:46.840623+00:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"notebook","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\n        INDEX_NAME  AS Key_name,\n        COLUMN_NAME AS Column_Name,\n        SUB_PART    AS Sub_Part,\n        INDEX_TYPE  AS Index_Type\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"notebook","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2023-04-13T13:18:46.852600+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:18:46.853817+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:18:46.854314+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-04-13T13:18:46.859524+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-04-13T13:18:46.869896+00:00] doctrine.DEBUG: Executing query: CREATE TABLE `admin` (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_880E0D76E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE `admin` (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_880E0D76E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2023-04-13T13:18:46.895754+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230413131834","2":"2023-04-13 13:18:46","3":35}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230413131834","2":"2023-04-13 13:18:46","3":35},"types":{"1":2,"2":2,"3":1}} []
[2023-04-13T13:18:46.913143+00:00] doctrine.INFO: Disconnecting [] []
